{"version":3,"file":"static/js/672.936ac84a.chunk.js","mappings":"0LAIIA,EAA6B,SAACC,GAAK,MAAM,CACzCC,OAAQD,EAAME,KAAKD,OACtB,EAEYE,EAAmB,SAACC,GAa7B,OAFqCC,EAAAA,EAAAA,IAAQN,EAARM,EATX,SAACC,GAGvB,OAAKA,EAAML,QAEJ,SAACG,GAAS,UAAKE,KAFI,SAAC,KAAQ,CAACC,GAAG,UAI3C,GAKJ,C,0FCrBA,EAA0B,yBAA1B,EAAiE,6BAAjE,EAAuG,wBAAvG,EAAwI,wBAAxI,EAA2K,0BAA3K,EAA+M,yB,mBCa/M,EAVmB,SAACD,GAEOA,EAAME,GAE9B,OACG,gBAAKC,UAAWC,EAAW,IAAMA,EAAS,UACvC,SAAC,KAAO,CAACH,GAAI,YAAcD,EAAME,GAAG,SAAEF,EAAMK,QAGrD,ECJA,EANgB,SAACL,GACd,OACG,gBAAKG,UAAWC,EAAU,SAAEJ,EAAMM,SAExC,E,uCCiDMC,GAAmBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EA/CF,SAACR,GACrB,OACG,kBAAMU,SAAUV,EAAMW,aAAa,WAChC,0BACG,SAACC,EAAA,EAAK,CAACP,KAAK,cACTQ,UAAWC,EAAAA,GACXC,YAAY,uBAElB,0BACG,4BAAQ,aAIpB,IAqCA,EAnCgB,SAACf,GAEd,IAKIN,EAAQM,EAAMgB,aACdC,EAAkBvB,EAAMwB,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAU,CAACf,KAAMe,EAAEf,KAAiBH,GAAIkB,EAAElB,IAAZkB,EAAElB,GAAgB,IAC1FmB,EAAkB3B,EAAM4B,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAO,CAACjB,QAASiB,EAAEjB,SAAciB,EAAErB,GAAM,IAExF,OAAKF,EAAML,QAGR,iBAAKQ,UAAWC,EAAU,WACvB,gBAAKD,UAAWC,EAAc,SAE1Ba,KAIJ,gBAAKd,UAAWC,EAAW,SACvBiB,KAEJ,0BACG,SAACd,EAAgB,CAACG,SAvBL,SAACc,GACpB,IAAIC,EAAOD,EAAOE,YAClB1B,EAAM2B,WAAWF,EACpB,UAM0B,SAAC,KAAQ,CAACxB,GAAG,UAmB1C,E,oBC/BA,GACG2B,E,QAAAA,KACG7B,EAAAA,EAAAA,KAlBgB,SAACL,GACpB,MAAO,CACJsB,aAActB,EAAMsB,aAE1B,IAEyB,SAACa,GACvB,MAAO,CACJF,WAAY,SAACD,GACVG,GAASC,EAAAA,EAAAA,GAA2BJ,GACvC,EAGN,IAMM7B,EAAAA,EAHN,CAIKkC,E","sources":["HOC/withAuthRedirect.jsx","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n\r\n\r\n        if (!props.isAuth) return <Navigate to='/login' />\r\n\r\n        return <Component {...props} />\r\n\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Hf8HO\",\"dialogItems\":\"Dialogs_dialogItems__e6CoO\",\"dialog\":\"Dialogs_dialog__FsyPI\",\"active\":\"Dialogs_active__5Xww9\",\"messages\":\"Dialogs_messages__9dofz\",\"message\":\"Dialogs_message__V9y61\",\"FIELD\":\"Dialogs_FIELD__wrJqO\"};","import React from \"react\"\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n\r\n   let path = \"/dialog/\" + props.id\r\n\r\n   return (\r\n      <div className={s.dialog + ' ' + s.active}>\r\n         <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n      </div>\r\n   )\r\n}\r\nexport default DialogItem","import React from \"react\"\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n   return (\r\n      <div className={s.message}>{props.message}</div>\r\n   )\r\n}\r\n\r\nexport default Message ","import React from \"react\"\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\"\r\nimport Message from \"./Message/Message\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\"\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\"\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field name='messageBody'\r\n               component={Textarea}\r\n               placeholder='Add new message' />\r\n         </div>\r\n         <div>\r\n            <button>Send</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n\r\n   const addNewMessage = (values) => {\r\n      let body = values.messageBody\r\n      props.addMessage(body)\r\n   }\r\n\r\n   let state = props.messagesPage\r\n   let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n   let messagesElement = state.messages.map(m => <Message message={m.message} key={m.id} />)\r\n\r\n   if (!props.isAuth) return <Navigate to='/login' />\r\n\r\n   return (\r\n      <div className={s.dialogs}>\r\n         <div className={s.dialogItems}>\r\n\r\n            {dialogsElements}\r\n\r\n         </div>\r\n\r\n         <div className={s.messages}>\r\n            {messagesElement}\r\n         </div>\r\n         <div>\r\n            <MessageFormRedux onSubmit={addNewMessage} />\r\n\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst MessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\n\r\nexport default Dialogs","import React from \"react\"\r\nimport { addNewMessageActionCreator, } from '../../Redux/message-reducer'\r\nimport Dialogs from \"./Dialogs\"\r\nimport { connect } from \"react-redux\"\r\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\"\r\nimport { compose } from \"redux\"\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      messagesPage: state.messagesPage,\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addMessage: (messageBody) => {\r\n         dispatch(addNewMessageActionCreator(messageBody))\r\n      },\r\n\r\n   }\r\n}\r\n\r\n\r\nexport default\r\n   compose(\r\n      connect(mapStateToProps, mapDispatchToProps),\r\n      withAuthRedirect,\r\n   )(Dialogs)"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","id","className","s","name","message","MessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","messagesPage","dialogsElements","dialogs","map","d","messagesElement","messages","m","values","body","messageBody","addMessage","compose","dispatch","addNewMessageActionCreator","Dialogs"],"sourceRoot":""}